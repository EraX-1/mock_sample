[project]
name = "yuyama-api"
version = "1.0.0"
description = "Yuyama RAG Chatbot API"
requires-python = ">=3.11"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.format]
# Black compatibility
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "ARG002", # unused method argument
    "B904",  # exception chaining (too many changes needed)
    "F403",  # star imports (Azure SDK uses this pattern)
    "F405",  # undefined from star imports (related to F403)
    "F841",  # unused variables (will be cleaned up later)
    "UP007", # Union syntax (keeping backward compatibility)
    "SIM115", # context managers (existing code pattern)
    "B007",  # unused loop variables (will be addressed)
    "E722",  # bare except (will be addressed)
    "B006",  # mutable defaults (existing pattern)
    "C416",  # unnecessary list comprehension
    "E402",  # module level import not at top (existing pattern)
    "E712",  # comparison to True/False (existing pattern)
    "ARG001", # unused arguments (existing pattern)
    "F811",  # redefined names (existing pattern)
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", # docstring requirements
    "D205", "D400", # docstring formatting
]
exclude = [
    ".venv",
    "venv",
    "__pycache__",
    "alembic/versions/*.py",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/*.py" = ["ARG001", "S101"]  # test-specific ignores

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | __pycache__
  | alembic/versions
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["src", "internal", "routers", "services", "utils"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
exclude = [
    "alembic/",
    "tests/",
]

[[tool.mypy.overrides]]
module = [
    "toml.*",
    "azure.*",
    "openai.*",
    "langchain.*",
    "pymupdf4llm.*",
    "fastapi.*",
    "uvicorn.*",
    "pydantic.*",
]
ignore_missing_imports = true
